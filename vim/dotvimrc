"---------------------------------------------------------"
"set vim environment variable
"---------------------------------------------------------"
set nocompatible
set cursorline

" vsplit line type
highlight VertSplit ctermbg=100 ctermfg=100
set fillchars=vert:\|

if has('syntax')
	syntax on
endif

" line number
set nu 
set relativenumber

" status line
set statusline=%<%f\ %h%m%r%=%-14.(%l,%c%V,%L%)\ %P

" auto ident
set ai 
" set autoindent equals to 4 spaces
set tabstop=8
set softtabstop=8
set shiftwidth=8
set noexpandtab
" background color
set background=light

" display completion matches in a status line
set wildmenu

" while typing a search comman, show where patter
" as it was typed so far, matches
" set incsearch

 
" enable mouse
if has('mouse')
	set mouse=a
endif
"---------------------------------------------------------"
" end set vim environment variable
"---------------------------------------------------------"

"---------------------------------------------------------"
" set key map
"---------------------------------------------------------"
" keyboard remap
map S :w<CR>
map s <nop>
map R :source $MYVIMRC<CR>
map Q :q<CR>
imap <C-N> <Esc>

" split window
map sl :set splitright<CR>:vnew<CR>
map sh :set nosplitright<CR>:vnew<CR>
map sj :set splitbelow<CR>:new<CR>
map sk :set nosplitbelow<CR>:new<CR>

" new tab page
map tp :tabnew<CR>
map tl :tabnext<CR>
map th :tabprevious<CR>
map <tab> :tabnext<CR>
map <S-tab> :tabprevious<CR>

" toggle cursor between windows 
map <C-H> <C-W>h
map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-L> <C-W>l

" resize window
" map <up> :res +4<CR>
" map <down> :res -4<CR>
" map <left> :vertical resize+4<CR>
" map <right> :vertical resize-4<CR>
map <S-j> :res -4<CR>
map <S-k> :res +4<CR>
map <S-l> :vertical resize+4<CR>
map <S-h> :vertical resize-4<CR>

" rotate window
" map <A-H> :res +4<CR>

"---------------------------------------------------------"
" ctags database path
"---------------------------------------------------------"
" set tags=./tags, tags

"---------------------------------------------------------"
" cscope database path
"---------------------------------------------------------"
set csto=0
set cst
set nocsverb
if has("cscope")
	set csprg=/usr/bin/cscope
	set csto=0
	set cst
	set nocsverb
	" add any database in current directory
	if filereadable("cscope.out")
		cs add cscope.out
	" else add database pointed to by environment
	elseif $CSCOPE_DB != ""
		cs add $CSCOPE_DB
	endif
	set csverb
endif


"---------------------------------------------------------"
" auto install vim- plug
"---------------------------------------------------------"
if empty(glob('~/.vim/autoload/plug.vim'))
	!curl -fLo ~/.vim/autoload/plug.vim --create-dirs
		\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif


"---------------------------------------------------------"
" set vim-plugin
" Specify a directory for plugins
" - For Neovim: stdpath('data') . '/plugged'
" - Avoid using standard Vim directory names like 'plugin'
"---------------------------------------------------------"
call plug#begin('~/.vim/plugged')

"---------------------------------------------------------"
" how to install or uninstall plugin
"---------------------------------------------------------"
" install:
" step 1:
"   Plug 'plugin link'
" step 2:
"   :w and source ~/.vimrc
" step 3:
"   :PlugInstall
" uninstall:
" step 1:
"   comment the Plug 'plugin link'you want to uninsatll
" step 2:
"   :w and source ~/.vimrc
" step 3:
"   :PlugClean
"---------------------------------------------------------"
" directory tree
Plug 'scrooloose/nerdtree'

" source explorer
Plug 'wesleyche/SrcExpl'

" source code browser, it read tag file created by ctags
" Plug 'vim-scripts/taglist.vim'

" displays tags in a window, ordered by scope
Plug 'majutsushi/tagbar'

" for intensely orgasmic commenting
Plug 'scrooloose/nerdcommenter'

" draw a nice statusline at the bottom of each window
" Plug 'vim-airline/vim-airline'

" vim-airline theme
" Plug 'vim-airline/vim-airline-themes'

" color theme
" Plug 'NLKNguyen/papercolor-theme'

" code completion engine for vim
" you have to install it manually in it's directory
" Plug 'ycm-core/YouCompleteMe'

" Initialize plugin system
call plug#end()
"---------------------------------------------------------"
" end plugin
"---------------------------------------------------------"


"---------------------------------------------------------"
" set vim-airline
"---------------------------------------------------------"

"---------------------------------------------------------"
" set source explorer
"---------------------------------------------------------"
nmap <F8> :SrcExplToggle<CR>
let g:SrcExpl_winHeight = 8
let g:SrcExpl_refreshTime = 100
let g:SrcExpl_jumpKey = "<ENTER>"
let g:SrcExpl_gobackKey = "<SPACE>"
let g:SrcExpl_isUpdateTags = 0

"---------------------------------------------------------"
" set taglist --- deprecated
" nmap <F7> :TlistToggle<CR>
" let Tlist_Inc_Winwidth = 0
" let Tlist_Exit_OnlyWindow = 0
" let Tlist_Auto_Open = 0
" let Tlist_Use_Right_Window = 1
"---------------------------------------------------------"

"---------------------------------------------------------"
" set tagbar
"---------------------------------------------------------"
nmap <F7> :TagbarToggle<CR>

"---------------------------------------------------------"
" set nerd tree
"---------------------------------------------------------"
let NERDTreeWinPos = "left"
nmap <F9> :NERDTreeToggle<CR>
